name: Node.js CI/CD with Docker

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ vars.DOCKER_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: |
          # Get the short commit SHA (first 7 characters)
          SHORT_SHA="${{ github.sha }}"
          SHORT_SHA=${SHORT_SHA:0:7}  # Truncate to first 7 characters
          
          IMAGE_TAG="${{ vars.DOCKER_USERNAME }}/restapitest:$SHORT_SHA"
          echo "Building Docker image with tag: $IMAGE_TAG"
          docker build -t $IMAGE_TAG .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ vars.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: |
          SHORT_SHA="${{ github.sha }}"
          SHORT_SHA=${SHORT_SHA:0:7}
          
          IMAGE_TAG="${{ vars.DOCKER_USERNAME }}/restapitest:$SHORT_SHA"
          echo "Pushing Docker image with tag: $IMAGE_TAG"
          docker push $IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    env:
      SERVER_IP: ${{ vars.SERVER_IP }}
    
    steps:
      - name: Deploy to server using Docker and SSH
        run: |
          SHORT_SHA="${{ github.sha }}"
          SHORT_SHA=${SHORT_SHA:0:7}

          IMAGE_TAG="${{ vars.DOCKER_USERNAME }}/restapitest:$SHORT_SHA"
          echo "Deploying Docker image with tag: $IMAGE_TAG"
          ssh -o StrictHostKeyChecking=no root@${{ vars.SERVER_IP }} << EOF
            # Pull the latest Docker image
            docker pull $IMAGE_TAG

            # Stop the running container (if any)
            docker stop restapitest || true

            # Remove the existing container (if any)
            docker rm restapitest || true

            # Run the new container on port 5001
            docker run -d --name restapitest -p 5001:5001 $IMAGE_TAG
          EOF
