# # # name: CI/CD for Node.js with Docker

# # # on:
# # #   push:
# # #     branches:
# # #       - main

# # # jobs:
# # #   build:
# # #     runs-on: ubuntu-latest
# # #     steps:
# # #       - name: Checkout code
# # #         uses: actions/checkout@v2

# # #       - name: Set up Node.js
# # #         uses: actions/setup-node@v3
# # #         with:
# # #           node-version: '21.7.1'  # Match your project Node version

# # #       - name: Install dependencies
# # #         run: npm ci

# # #       - name: Build the project
# # #         run: npm run build

# # #   docker:
# # #     needs: build
# # #     runs-on: ubuntu-latest
# # #     steps:
# # #       - name: Checkout code
# # #         uses: actions/checkout@v2

# # #       - name: Login to Docker Hub
# # #         uses: docker/login-action@v3
# # #         with:
# # #           username: ${{ vars.DOCKERHUB_USERNAME }}
# # #           password: ${{ vars.DOCKER_PASSWORD }} 

# # #       - name: Build and push Docker image
# # #         run: |
# # #           docker build -t ${{ vars.DOCKERHUB_USERNAME }}/nodejs-app:latest .
# # #           docker push ${{ vars.DOCKERHUB_USERNAME }}/nodejs-app:latest

# # #   deploy:
# # #     needs: docker
# # #     runs-on: ubuntu-latest
# # #     steps:
# # #       - name: Deploy to Server
# # #         uses: appleboy/ssh-action@v0.1.5
# # #         with:
# # #           host: ${{ vars.SERVER_IP }}
# # #           username: root
# # #           password: ${{ vars.SERVER_PASSWORD }}
# # #           script: |
# # #             mkdir -p /var/www/nodejs-app/
# # #             docker pull ${{ vars.DOCKERHUB_USERNAME }}/nodejs-app:latest
# # #             docker stop nodejs_app || true && docker rm nodejs_app || true
# # #             docker run -d --name nodejs_app -p ${{ vars.SERVER_PORT }}:5001 \
# # #               -e NODE_ENV=production ${{ vars.DOCKERHUB_USERNAME }}/nodejs-app:latest
# # name: CI/CD for Node.js with Docker

# # on:
# #   push:
# #     branches:
# #       - master

# # jobs:
# #   build:
# #     runs-on: ubuntu-latest
# #     steps:
# #       - name: Checkout code
# #         uses: actions/checkout@v2

# #       - name: Set up Node.js
# #         uses: actions/setup-node@v3
# #         with:
# #           node-version: '21.7.1'  # Match your project Node version

# #       - name: Install dependencies
# #         run: npm ci

# #       - name: Build the project
# #         run: npm run build

# #   docker:
# #     needs: build
# #     runs-on: ubuntu-latest
# #     steps:
# #       - name: Checkout code
# #         uses: actions/checkout@v2

# #       - name: Login to Docker Hub
# #         uses: docker/login-action@v3
# #         with:
# #           username: ${{ vars.DOCKERHUB_USERNAME }}
# #           password: ${{ vars.DOCKER_PASSWORD }} 

# #       - name: Build and push Docker image
# #         run: |
# #           docker build -t ${{ vars.DOCKERHUB_USERNAME }}/nodejs-app:latest .
# #           docker push ${{ vars.DOCKERHUB_USERNAME }}/nodejs-app:latest

# #   deploy:
# #     needs: docker
# #     runs-on: ubuntu-latest
# #     steps:
# #       - name: Deploy to Server
# #         uses: appleboy/ssh-action@v0.1.5
# #         with:
# #           host: ${{ vars.SERVER_IP }}
# #           username: root
# #           password: ${{ vars.SERVER_PASSWORD }}
# #           script: |
# #             mkdir -p /var/www/nodejs-app/
# #             docker pull ${{ vars.DOCKERHUB_USERNAME }}/nodejs-app:latest
# #             docker stop nodejs_app || true && docker rm nodejs_app || true
# #             docker container prune -f  # Optional cleanup
# #             docker run -d --name nodejs_app -p ${{ vars.SERVER_PORT }}:5001 \
# #               -e NODE_ENV=production --restart unless-stopped \
# #               ${{ vars.DOCKERHUB_USERNAME }}/nodejs-app:latest
# # name: CI/CD for Node.js with Docker

# # on:
# #   push:
# #     branches:
# #       - master

# # jobs:
# #   build:
# #     runs-on: ubuntu-latest
# #     steps:
# #       - name: Checkout code
# #         uses: actions/checkout@v2

# #       - name: Set up Node.js
# #         uses: actions/setup-node@v3
# #         with:
# #           node-version: '21.7.1'  # Match your project Node version

# #       - name: Install dependencies
# #         run: npm ci


# #   docker:
# #     needs: build
# #     runs-on: ubuntu-latest
# #     steps:
# #       - name: Checkout code
# #         uses: actions/checkout@v2

# #       - name: Login to Docker Hub
# #         uses: docker/login-action@v3
# #         with:
# #           username: ${{ vars.DOCKERHUB_USERNAME }}
# #           password: ${{ vars.DOCKER_PASSWORD }} 

# #       - name: Build and push Docker image
# #         run: |
# #           docker build -t ${{ vars.DOCKERHUB_USERNAME }}/nodejs-app:latest .
# #           docker push ${{ vars.DOCKERHUB_USERNAME }}/nodejs-app:latest

# #   deploy:
# #     needs: docker
# #     runs-on: ubuntu-latest
# #     steps:
# #       - name: Deploy to Server
# #         uses: appleboy/ssh-action@v0.1.5
# #         with:
# #           host: ${{ vars.SERVER_IP }}
# #           username: root
# #           password: ${{ vars.SERVER_PASSWORD }}
# #           script: |
# #             mkdir -p /var/www/nodejs-app/
# #             docker pull ${{ vars.DOCKERHUB_USERNAME }}/nodejs-app:latest
# #             docker stop nodejs_app || true && docker rm nodejs_app || true
# #             docker run -d --name nodejs_app -p ${{ vars.SERVER_PORT }}:5001 \
# #               -e NODE_ENV=production ${{ vars.DOCKERHUB_USERNAME }}/nodejs-app:latest
# name: CI/CD for Node.js with Docker

# on:
#   push:
#     branches:
#       - master

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '21.7.1'  # Match your project Node version

#       - name: Install dependencies
#         run: npm ci

#   docker:
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ vars.DOCKERHUB_USERNAME }}
#           password: ${{ vars.DOCKER_PASSWORD }} 

#       - name: Build and push Docker image
#         run: |
#           docker build -t ${{ vars.DOCKERHUB_USERNAME }}/nodejs-app:latest .
#           docker push ${{ vars.DOCKERHUB_USERNAME }}/nodejs-app:latest

#   deploy:
#     needs: docker
#     runs-on: ubuntu-latest
#     steps:
#       - name: Deploy to Server
#         uses: appleboy/ssh-action@v0.1.5
#         with:
#           host: ${{ vars.SERVER_IP }}
#           username: root
#           password: ${{ vars.SERVER_PASSWORD }}
#           script: |
#             mkdir -p /var/www/nodejs-app/
#             docker pull ${{ vars.DOCKERHUB_USERNAME }}/nodejs-app:latest .
#             docker stop nodejs_app || true && docker rm nodejs_app || true
#             docker run -d --name nodejs_app -p ${{ vars.SERVER_PORT }}:5001 \
#               -e NODE_ENV=production ${{ vars.DOCKERHUB_USERNAME }}/nodejs-app:latest
name: CI/CD for Node.js with Docker

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21.7.1'  # Match your project Node version

      - name: Install dependencies
        run: npm ci

  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ vars.DOCKER_PASSWORD }} 

      - name: Build and push Docker image
        run: |
          docker build -t ${{ vars.DOCKERHUB_USERNAME }}/nodejs-app:latest .
          docker push ${{ vars.DOCKERHUB_USERNAME }}/nodejs-app:latest

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ vars.SERVER_IP }}
          username: root
          password: ${{ vars.SERVER_PASSWORD }}
          script: |
            mkdir -p /var/www/nodejs-app/
            docker pull ${{ vars.DOCKERHUB_USERNAME }}/nodejs-app:latest
            docker stop nodejs_app || true && docker rm nodejs_app || true
            docker run -d --name nodejs_app -p ${{ vars.SERVER_PORT }}:5001 \
              -e NODE_ENV=production ${{ vars.DOCKERHUB_USERNAME }}/nodejs-app:latest
